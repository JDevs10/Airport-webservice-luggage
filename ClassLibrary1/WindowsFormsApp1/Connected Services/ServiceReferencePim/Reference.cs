//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace WindowsFormsApp1.ServiceReferencePim {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServiceReferencePim.IServicePim")]
    public interface IServicePim {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServicePim/GetBagageById", ReplyAction="http://tempuri.org/IServicePim/GetBagageByIdResponse")]
        MyAirport.Pim.Entities.BagageDefinition GetBagageById(int idBagage);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServicePim/GetBagageById", ReplyAction="http://tempuri.org/IServicePim/GetBagageByIdResponse")]
        System.Threading.Tasks.Task<MyAirport.Pim.Entities.BagageDefinition> GetBagageByIdAsync(int idBagage);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServicePim/GetBagageByCodeIata", ReplyAction="http://tempuri.org/IServicePim/GetBagageByCodeIataResponse")]
        MyAirport.Pim.Entities.BagageDefinition GetBagageByCodeIata(string codeIata);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServicePim/GetBagageByCodeIata", ReplyAction="http://tempuri.org/IServicePim/GetBagageByCodeIataResponse")]
        System.Threading.Tasks.Task<MyAirport.Pim.Entities.BagageDefinition> GetBagageByCodeIataAsync(string codeIata);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServicePim/CreateBagage", ReplyAction="http://tempuri.org/IServicePim/CreateBagageResponse")]
        int CreateBagage(MyAirport.Pim.Entities.BagageDefinition bag);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServicePim/CreateBagage", ReplyAction="http://tempuri.org/IServicePim/CreateBagageResponse")]
        System.Threading.Tasks.Task<int> CreateBagageAsync(MyAirport.Pim.Entities.BagageDefinition bag);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IServicePimChannel : WindowsFormsApp1.ServiceReferencePim.IServicePim, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ServicePimClient : System.ServiceModel.ClientBase<WindowsFormsApp1.ServiceReferencePim.IServicePim>, WindowsFormsApp1.ServiceReferencePim.IServicePim {
        
        public ServicePimClient() {
        }
        
        public ServicePimClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public ServicePimClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ServicePimClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ServicePimClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public MyAirport.Pim.Entities.BagageDefinition GetBagageById(int idBagage) {
            return base.Channel.GetBagageById(idBagage);
        }
        
        public System.Threading.Tasks.Task<MyAirport.Pim.Entities.BagageDefinition> GetBagageByIdAsync(int idBagage) {
            return base.Channel.GetBagageByIdAsync(idBagage);
        }
        
        public MyAirport.Pim.Entities.BagageDefinition GetBagageByCodeIata(string codeIata) {
            return base.Channel.GetBagageByCodeIata(codeIata);
        }
        
        public System.Threading.Tasks.Task<MyAirport.Pim.Entities.BagageDefinition> GetBagageByCodeIataAsync(string codeIata) {
            return base.Channel.GetBagageByCodeIataAsync(codeIata);
        }
        
        public int CreateBagage(MyAirport.Pim.Entities.BagageDefinition bag) {
            return base.Channel.CreateBagage(bag);
        }
        
        public System.Threading.Tasks.Task<int> CreateBagageAsync(MyAirport.Pim.Entities.BagageDefinition bag) {
            return base.Channel.CreateBagageAsync(bag);
        }
    }
}
